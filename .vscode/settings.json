{
    "beautify.config": "",
    "prettier.tabWidth": 4,
    "beautify.ignore": "",
    "beautify.language": {

        "js": {
            "type": [
                "javascript",
                "json",
                "jsonc",
                "JSX"
            ],
            "filename": [
                ".jshintrc",
                ".jsbeautifyrc"
            ]
        },
        "css": [
            "css",
            "less",
            "scss"
        ],
        "html": [
            "htm",
            "html"
        ]
    },
    "editor.formatOnPaste": false,
    "editor.formatOnSave": true,
    "git.ignoreLimitWarning": true,
    "liveServer.settings.CustomBrowser": "chrome",
    "liveServer.settings.fullReload": true,
    "liveServer.settings.useWebExt": true,
    "dart.extensionLogFile": "logs/extension.txt",
	"dart.analyzerLogFile": "logs/analyzer.txt",
	"dart.analyzerInstrumentationLogFile": "logs/analyzer.instrum.txt",
	"dart.flutterRunLogFile": "logs/flutter_run.txt",
	"dart.flutterTestLogFile": "logs/flutter_test.txt",
	"dart.dartTestLogFile": "logs/dart_test.txt",
	"dart.flutterDaemonLogFile": "logs/flutter_daemon.txt",
	"dart.vmServiceLogFile": "logs/observatory.txt",
	"dart.dapLogFile": "logs/dap.txt",
	"dart.analysisExcludedFolders": [
		"src/test/test_projects/bazel_workspace",
		"src/test/test_projects/dart_create_template",
		"src/test/test_projects/flutter_create_basic",
		"src/test/test_projects/flutter_create_sample"
	],
	"dart.doNotFormat": [
		"**/lib/comments.dart"
	],
	// Causes the debug view to automatically appear when a breakpoint is hit. This
	// setting is global and not configurable per-language.
	"debug.openDebug": "openOnDebugBreak",

	// By default, VS Code will only switch to the Debug Console when you start
	// debugging the first time in a session. This setting tells VS Code to always
	// switch to the Debug Console when starting a session, so you can see the
	// programs output.
	"debug.internalConsoleOptions": "openOnSessionStart",

	"[dart]": {
		// Automatically format code on save and during typing of certain characters
		// (like `;` and `}`).
		"editor.formatOnSave": true,
		"editor.formatOnType": true,

		// Draw a guide line at 80 characters, where Dart's formatting will wrap code.
		"editor.rulers": [80],

		// Disables built-in highlighting of words that match your selection. Without
		// this, all instances of the selected text will be highlighted, interfering
		// with Dart's ability to highlight only exact references to the selected variable.
		"editor.selectionHighlight": false,

		// By default, VS Code will pre-select the most recently used item from code
		// completion. This is usually not the most relevant item.
		//
		// "first" will always select top item
		// "recentlyUsedByPrefix" will filter the recently used items based on the
		//     text immediately preceding where completion was invoked.
		"editor.suggestSelection": "first",

		// Allows pressing <TAB> to complete snippets such as `for` even when the
		// completion list is not visible.
		"editor.tabCompletion": "onlySnippets",

		// By default, VS Code will populate code completion with words found in the
		// current file when a language service does not provide its own completions.
		// This results in code completion suggesting words when editing comments and
		// strings. This setting will prevent that.
		"editor.wordBasedSuggestions": false,
	}
}